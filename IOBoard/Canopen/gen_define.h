/*
 * Stack definitions for slave_t - generated by CANopen DeviceDesigner 2.7.0
 * 周四 十一月 2 16:31:43 2017
 */

/* protect against multiple inclusion of the file */
#ifndef GEN_DEFINE_H
#define GEN_DEFINE_H 1

/* some information about the tool that has generated this file */
#define GEN_TOOL_NAME	CANOPEN_DEVICEDESIGNER
#define GEN_TOOL_VERSION	0x020700ul

/* Line Settings */
#define CO_MULTI_LINE_CNT	1u
#define CANOPEN_SUPPORTED	1u
/* Number of objects per line */
#define CO_OBJECTS_LINE_0_CNT	39u
#define CO_OBJECT_COUNTS	39u
#define CO_COB_COUNTS	10u
#define CO_TXPDO_COUNTS	1u
#define CO_RXPDO_COUNTS	1u
#define CO_SSDO_COUNTS	1u
#define CO_CSDO_COUNTS	0u
#define CO_ASSIGN_COUNTS	0u
#define CO_GUARDING_COUNTS	CO_ASSIGN_COUNTS
#define CO_ERR_CTRL_COUNTS	2u
#define CO_ERR_HIST_COUNTS	0u
#define CO_EMCY_CONS_COUNTS	0u
#define CO_NODE_IDS	0x20
#define CO_NODE_ID_FUNCTIONS NULL

/* Definition of numbers of CANopen services */
#define CO_PROFILE_401	1u
#define CO_DYNAMIC_OBJDIC	1u
#define CO_SDO_SERVER_CNT	1u
#define CO_PDO_TRANSMIT_CNT	1u
#define CO_PDO_RECEIVE_CNT	1u
#define CO_MAX_MAP_ENTRIES	2u
#define CO_TR_PDO_DYN_MAP_ENTRIES	1u
#define CO_REC_PDO_DYN_MAP_ENTRIES	1u
#define CO_HB_CONSUMER_CNT 2u
#define CO_SYNC_SUPPORTED	1u
#define CO_EMCY_PRODUCER	1u
/* number of used COB objects */
#define CO_COB_CNT	10u


/* Definition of number of call-back functions for each service*/
#define CO_EVENT_DYNAMIC_SDO_SERVER_READ	1u
#define CO_EVENT_DYNAMIC_SDO_SERVER_WRITE	1u
#define CO_EVENT_DYNAMIC_PDO	1u
#define CO_EVENT_DYNAMIC_ERRCTRL	1u
#define CO_EVENT_DYNAMIC_SYNC	1u
#define CO_EVENT_DYNAMIC_LED	1u

/* Definition of CAN queue sizes */
#define CO_CONFIG_REC_BUFFER_CNT	30u
#define CO_CONFIG_TRANS_BUFFER_CNT	30u

/* Hardware settings */
/*  */
#define CO_TIMER_INTERVAL	1000u

/* do not modify comments starting with 'user-specific section:' */
/* user-specific section: start */
#define  CUSTOMER_SYSCLOCK_CONFIG
#define CODRV_STM32F0
#include "main.h"


#define DI_ADR		0x50
#define DO_ADR		0x60
#define AO_ADR		0x70

extern uint32_t enableConsumer;
extern uint32_t errCnt_Clr;
extern uint32_t errCnt_Can;
extern uint32_t errCnt_Nmt;

extern uint8_t simuDO1;
extern uint8_t simuDO2;
extern uint16_t simuAO1;
extern uint16_t simuAO2;
extern uint8_t diState1;
extern uint8_t diState2;
extern uint16_t readBackAO2;
extern uint16_t readBackAO1;
extern uint16_t caliStatus1;
extern uint16_t caliStatus2;

extern uint32_t serialNumber;

#define CODRV_BIT_TABLE_EXTERN
#define CODRV_CANCLOCK_48MHZ
#define CODRV_CANCLOCK_PRE_10BIT

extern uint8_t doState1;
extern uint8_t doState2;

extern uint16_t aoValue1;
extern uint16_t aoValue2;
extern uint32_t masterAdr;
extern uint32_t heartBeatTime;

extern uint16_t dicObjType;
extern uint16_t dicAtrId;
extern uint16_t dicObjId;
extern uint32_t objValueU32;
extern float objValueR32;


extern uint8_t devAdr;
extern uint32_t devType;
extern uint32_t fctTest;
extern uint32_t version;
extern uint8_t canText[8];
extern uint8_t uartText[8];
#ifdef CO_NODE_IDS
#undef    CO_NODE_IDS
#define CO_NODE_IDS devAdr
#endif

extern OS_RSEMA canopenOdLockId;

#define CO_OS_LOCK_OD() (void)OS_Use(canopenOdLockId)
#define CO_OS_UNLOCK_OD() (void)OS_Unuse(canopenOdLockId)


extern char deviceName[32];
#define SIGNAL_CANOPEN_CAN 0x01u
#define SIGNAL_CANOPEN_TIMER 0x02u
#define SIGNAL_CANOPEN_CAN_TX 0x04u

#define SIGNAL_CANOPEN_ALL	(SIGNAL_CANOPEN_CAN|SIGNAL_CANOPEN_TIMER|SIGNAL_CANOPEN_CAN_TX)

#define CO_OS_SIGNAL_CAN_TRANSMIT() \
do { (void)osSignalSet(canopenTaskId, SIGNAL_CANOPEN_CAN_TX ); } while(0)
#define CO_OS_SIGNAL_CAN_RECEIVE() \
do { (void)osSignalSet(canopenTaskId, SIGNAL_CANOPEN_CAN ); } while(0)

#define CO_OS_SIGNAL_TIMER() \
do { (void)osSignalSet(canopenTaskId, SIGNAL_CANOPEN_TIMER ); } while(0)

void FCT_Test(void);
/* user-specific section: end */

#endif /* GEN_DEFINE_H */
